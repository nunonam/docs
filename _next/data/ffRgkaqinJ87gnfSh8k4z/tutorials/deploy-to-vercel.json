{"pageProps":{"frontmatter":{"title":"Deploy to Vercel","subtitle":"Let's try out the new PlanetScale integration for Vercel!"},"headings":[{"depth":2,"value":"Introduction"},{"depth":2,"value":"Prerequisites"},{"depth":2,"value":"Setup a PlanetScale database"},{"depth":2,"value":"Deploy to Vercel"},{"depth":2,"value":"Add Vercel integration"},{"depth":2,"value":"Summary"},{"depth":2,"value":"What's next?"},{"depth":2,"value":"Need help?"}],"body":{"compiledSource":"var d=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var r=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var p=(a,t,o)=>t in a?d(a,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):a[t]=o,e=(a,t)=>{for(var o in t||(t={}))r.call(t,o)&&p(a,o,t[o]);if(l)for(var o of l(t))i.call(t,o)&&p(a,o,t[o]);return a},s=(a,t)=>m(a,h(t));var c=(a,t)=>{var o={};for(var n in a)r.call(a,n)&&t.indexOf(n)<0&&(o[n]=a[n]);if(a!=null&&l)for(var n of l(a))t.indexOf(n)<0&&i.call(a,n)&&(o[n]=a[n]);return o};const makeShortcode=a=>function(o){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},o))},InfoBlock=makeShortcode(\"InfoBlock\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(o){var n=o,{components:a}=n,t=c(n,[\"components\"]);return mdx(MDXLayout,s(e(e({},layoutProps),t),{components:a,mdxType:\"MDXLayout\"}),mdx(\"h2\",null,\"Introduction\"),mdx(\"p\",null,\"In this tutorial, we're going to deploy a Next.js application with a PlanetScale database to Vercel, using the PlanetScale integration for Vercel. As a bonus, we've included the sample application code in this tutorial. We'll walk you step-by-step through creating a new PlanetScale database, deploying your application to Vercel, and using the Vercel integration. Excited? Let's go!\"),mdx(\"h2\",null,\"Prerequisites\"),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"Install the \",mdx(\"a\",e({parentName:\"li\"},{href:\"https://github.com/planetscale/cli\"}),\"PlanetScale CLI\"),\".\"),mdx(\"li\",{parentName:\"ul\"},\"Authenticate the CLI with the following command:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`pscale auth login\n`)),mdx(\"h2\",null,\"Setup a PlanetScale database\"),mdx(\"p\",null,\"Now we're ready to start our adventure. Let's begin by setting up our PlanetScale database with a small sample table.\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"Create a new PlanetScale database:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`pscale database create <DATABASE_NAME>\n`)),mdx(\"p\",null,\"This creates a database with one default branch, \",mdx(\"inlineCode\",{parentName:\"p\"},\"main\"),\", which we'll use as the \",mdx(\"a\",e({parentName:\"p\"},{href:\"/concepts/branching#development-and-production-branches\"}),\"production branch\"),\".\"),mdx(\"ol\",e({},{start:2}),mdx(\"li\",{parentName:\"ol\"},\"For development, create a new \",mdx(\"inlineCode\",{parentName:\"li\"},\"development\"),\" branch:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`pscale branch create <DATABASE_NAME> <BRANCH_NAME>\n`)),mdx(\"ol\",e({},{start:3}),mdx(\"li\",{parentName:\"ol\"},\"Connect to your database to make a \",mdx(\"a\",e({parentName:\"li\"},{href:\"/concepts/nonblocking-schema-changes\"}),\"non-blocking schema change\"),\":\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`pscale shell <DATABASE_NAME> <BRANCH_NAME>\n`)),mdx(\"ol\",e({},{start:4}),mdx(\"li\",{parentName:\"ol\"},\"Create the following example table:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-sql\"}),\"CREATE TABLE `users` (\\n  `id` int NOT NULL AUTO_INCREMENT PRIMARY KEY,\\n  `email` varchar(255) NOT NULL,\\n  `password` varchar(255) NOT NULL,\\n  `name` varchar(255)\\n);\\n\")),mdx(\"ol\",e({},{start:5}),mdx(\"li\",{parentName:\"ol\"},\"Before making a deploy request, you need a production branch. Promote your \",mdx(\"inlineCode\",{parentName:\"li\"},\"main\"),\" branch to production:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`pscale branch promote <DATABASE_NAME> <BRANCH_NAME>\n`)),mdx(\"ol\",e({},{start:6}),mdx(\"li\",{parentName:\"ol\"},\"Create a \",mdx(\"strong\",{parentName:\"li\"},\"deployment request\"),\" by running:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`pscale deploy-request create <DATABASE_NAME> <BRANCH_NAME>\n`)),mdx(\"ol\",e({},{start:7}),mdx(\"li\",{parentName:\"ol\"},\"Deploy the \",mdx(\"strong\",{parentName:\"li\"},\"deploy request\"),\":\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`pscale deploy-request deploy <DATABASE_NAME> <DEPLOY_REQUEST_NUMBER>\n`)),mdx(\"ul\",null,mdx(\"li\",{parentName:\"ul\"},\"To find your \",mdx(\"inlineCode\",{parentName:\"li\"},\"DEPLOY_REQUEST_NUMBER\"),\", run:\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`pscale deploy-request list <DATABASE_NAME>\n`)),mdx(\"p\",null,\"Copy the value from \",mdx(\"inlineCode\",{parentName:\"p\"},\"NUMBER\"),\" and use that digit as your \",mdx(\"inlineCode\",{parentName:\"p\"},\"DEPLOY_REQUEST_NUMBER\"),\".\"),mdx(\"ol\",e({},{start:8}),mdx(\"li\",{parentName:\"ol\"},\"Merge your \",mdx(\"inlineCode\",{parentName:\"li\"},\"development\"),\" branch into \",mdx(\"inlineCode\",{parentName:\"li\"},\"main\"),\":\")),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{className:\"language-bash\"}),`pscale deploy-request deploy <DATABASE_NAME> <DEPLOY_REQUEST_NUMBER>\n`)),mdx(\"h2\",null,\"Deploy to Vercel\"),mdx(\"p\",null,\"We mentioned earlier that we had included a sample Next.js application in this tutorial for you to deploy to Vercel. This demo application creates a \",mdx(\"inlineCode\",{parentName:\"p\"},\"user\"),\" with a \",mdx(\"em\",{parentName:\"p\"},\"name\"),\", \",mdx(\"em\",{parentName:\"p\"},\"email address\"),\", and \",mdx(\"em\",{parentName:\"p\"},\"password\"),\". In this section, we're going to connect the Git repository of our sample application to \",mdx(\"strong\",{parentName:\"p\"},\"Vercel\"),\".\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"Click the following \",mdx(\"strong\",{parentName:\"li\"},\"Vercel Deploy\"),\" button:\")),mdx(\"a\",{target:\"_blank\",href:\"https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fplanetscale%2Fvercel-integration-example&project-name=vercel-integration-example&repository-name=vercel-integration-example&integration-ids=oac_ni8CGiTU3oM25q1k2L6unVMp\"},mdx(\"img\",{src:\"https://vercel.com/button\",alt:\"Deploy with Vercel\"})),mdx(\"p\",null,\"Vercel offers the option to clone our repository into GitHub, GitLab, or Bitbucket. In this tutorial, we're using GitHub.\"),mdx(\"ol\",e({},{start:2}),mdx(\"li\",{parentName:\"ol\"},\"Click the \",mdx(\"strong\",{parentName:\"li\"},\"Create\"),\" button to create your new Git repository.\")),mdx(\"h2\",null,\"Add Vercel integration\"),mdx(\"p\",null,\"We're almost done! The final thing we need to do is add a Vercel integration to our PlanetScale database.\"),mdx(\"ol\",null,mdx(\"li\",{parentName:\"ol\"},\"Click the \",mdx(\"strong\",{parentName:\"li\"},\"Add\"),\" button to add the PlanetScale integration to this Vercel project.\")),mdx(InfoBlock,{type:\"tip\",mdxType:\"InfoBlock\"},\"Make sure you pick the \",mdx(\"b\",null,\"same database\"),\" that you created in the earlier part of this tutorial so that it has the right schema.\"),mdx(\"p\",null,\"This step automatically runs your first \",mdx(\"strong\",{parentName:\"p\"},\"Vercel deployment\"),\".\"),mdx(InfoBlock,{type:\"tip\",mdxType:\"InfoBlock\"},\"Every push to \",mdx(\"b\",null,\"main\"),\" will automatically deploy your application in Vercel.\"),mdx(\"p\",null,\"Once added, the integration creates a service token for your PlanetScale database and adds the necessary \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://vercel.com/docs/environment-variables\"}),\"environment variables\"),\" to your Vercel project:\"),mdx(\"pre\",null,mdx(\"code\",e({parentName:\"pre\"},{}),`PLANETSCALE_DB\nPLANETSCALE_DB_USERNAME\nPLANETSCALE_DB_PASSWORD\nPLANETSCALE_DB_HOST\nPLANETSCALE_SSL_CERT_PATH\nPLANETSCALE_ORG\nPLANETSCALE_TOKEN\nPLANETSCALE_TOKEN_NAME\n`)),mdx(InfoBlock,{type:\"note\",mdxType:\"InfoBlock\"},mdx(\"div\",null,mdx(\"b\",null,\"Removing Vercel integrations:\"),mdx(\"ul\",null,mdx(\"li\",null,\"Environment variables are removed from all projects tied to the integration.\"),mdx(\"li\",null,\"All service tokens are destroyed and your application will no longer be able to connect to your PlanetScale database.\")),mdx(\"br\",null),mdx(\"b\",null,\"Updating Vercel integration permissions:\"),mdx(\"ul\",null,mdx(\"li\",null,\"Old service tokens are removed in deleted projects.\"),mdx(\"li\",null,\"New service tokens are created and environment variables are added to the project(s).\"),mdx(\"li\",null,\"New projects should have access to the PlanetScale database tied to the integration after installation is done.\")))),mdx(\"p\",null,\"All done! Congratulations on successfully deploying your application with a PlanetScale database to Vercel.\"),mdx(\"h2\",null,\"Summary\"),mdx(\"p\",null,\"In this tutorial, we deployed a Next.js application that was connected to a PlanetScale database to Vercel. We chose to use the sample Next.js application we built in this tutorial and then used it to connect to a PlanetScale database.\"),mdx(\"h2\",null,\"What's next?\"),mdx(\"p\",null,\"Now that you've successfully deployed an application to Vercel, it's time to make more schema changes to your tables! Learn more about how PlanetScale allows you to make \",mdx(\"a\",e({parentName:\"p\"},{href:\"/concepts/nonblocking-schema-changes\"}),\"non-blocking schema changes\"),\" to your database tables without locking or causing downtime for production databases.\"),mdx(\"h2\",null,\"Need help?\"),mdx(\"p\",null,\"Get help from \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.planetscale.com/support\"}),\"PlanetScale's support team\"),\", or join our \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://github.com/planetscale/beta/discussions\"}),\"GitHub Discussion board\"),\" to see how others are using PlanetScale.\"))}MDXContent.isMDXComponent=!0;\n","scope":{}},"fields":{"slug":"tutorials/deploy-to-vercel","lastUpdatedOn":"2021-12-25T04:33:56.535Z"}},"__N_SSG":true}